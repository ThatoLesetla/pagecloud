@model PageCloud.Models.User

@{
    ViewBag.Title = "Register";
    Layout = null;
}
@Styles.Render("~/Content/css");


<div class="reg-w3">
    <div class="w3layouts-main">
        <h2>Register Now</h2>

        @using (Html.BeginForm("Create", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @placerholder="Username", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userSurname, htmlAttributes: new { @class = "control-label col-md-1"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userSurname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userSurname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userEmail, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userPassword, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userPassword, "", new { @class = "text-danger" })
                        <br />
                        <ul>
                            <li class="text-danger">Your passwords must contain at least 8 characters</li>
                            <li class="text-danger">Your password must contain at least one lower-case character</li>
                            <li class="text-danger">Your password must contain at least one number:</li>
                            <li class="text-danger">Your password must contain at least one special characters: ! # $ % ^ * ( ) - _ = + ; : , . / ? ` ~</li>
                        </ul>
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.registerDate, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.registerDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.registerDate, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.idno, htmlAttributes: new { @class = "control-label col-md-1"})
                    <div class="col-md-10">
                        @*<input type="text" class="form-control" name="id" id="idno" onkeyup="validate()" minlength="13" maxlength="13" />*@
                        @Html.EditorFor(model => model.idno, new { htmlAttributes = new { @class="form-control", @minlength="13", @maxlength="13", @name="id", @id="idno", @onkeyup="validate()"}})
                        @Html.ValidationMessageFor(model => model.idno, "", new { @class = "text-danger"})
                        <br />
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @minlength="10", @maxlength="10"} })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userAddress, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.postalCode, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.postalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <p>Already Registered.<a href="/Home/Login">Login</a></p>
    </div>
</div>

<script>
    function validate() {
        var id = document.getElementById("idno").value;

        if (id.length >= 7) {
            var genderIndicator = parseFloat(id.charAt(6));
            var sel = document.getElementById('gender')[2];

            if (genderIndicator >= 5) {
                console.log(sel);

            } else {
                alert("This is a female");
                
            }
        }
    }
</script>